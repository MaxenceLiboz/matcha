/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Decimal = ColumnType<string, number | string>;

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export interface Conversation {
  created_at: Generated<Date>;
  id: Generated<number>;
  updated_at: Generated<Date>;
}

export interface ConversationParticipant {
  conversation_id: number;
  created_at: Generated<Date>;
  updated_at: Generated<Date>;
  user_id: number;
}

export interface FakeAccount {
  fake_user_id: number;
  id: Generated<number>;
  reason: string | null;
  reported_at: Generated<Date | null>;
  reported_by_user_id: number;
  updated_at: Generated<Date>;
}

export interface Location {
  city: string | null;
  created_at: Generated<Date>;
  id: Generated<number>;
  latitude: Decimal | null;
  longitude: Decimal | null;
  updated_at: Generated<Date>;
  user_id: number;
}

export interface Message {
  content: string;
  conversation_id: number;
  created_at: Generated<Date>;
  id: Generated<number>;
  is_read: Generated<number | null>;
  sender_id: number;
  updated_at: Generated<Date>;
}

export interface Notification {
  created_at: Generated<Date>;
  id: Generated<number>;
  message: string;
  status: Generated<number | null>;
  type: "like" | "match" | "message" | "other" | "report" | "view";
  updated_at: Generated<Date>;
  user_id: number;
}

export interface Picture {
  created_at: Generated<Date>;
  id: Generated<number>;
  is_profile: Generated<number | null>;
  mime_type: string;
  ref: string;
  updated_at: Generated<Date>;
  user_id: number;
}

export interface Profile {
  age: number;
  biography: string;
  created_at: Generated<Date>;
  fame_rating: Generated<number>;
  gender: "Female" | "Male" | "Other";
  id: Generated<number>;
  sexual_preference: "Heterosexual" | "Homosexual" | "Other";
  updated_at: Generated<Date>;
  user_id: number;
}

export interface Tag {
  created_at: Generated<Date>;
  id: Generated<number>;
  name: string;
  updated_at: Generated<Date>;
}

export interface User {
  created_at: Generated<Date>;
  email: string;
  first_name: string;
  id: Generated<number>;
  last_name: string;
  password_hash: string;
  updated_at: Generated<Date>;
  username: string;
  verified: Generated<number>;
}

export interface UserBlocked {
  blocked_user_id: number;
  created_at: Generated<Date>;
  updated_at: Generated<Date>;
  user_id: number;
}

export interface UserDislike {
  created_at: Generated<Date>;
  disliked_user_id: number;
  updated_at: Generated<Date>;
  user_id: number;
}

export interface UserLike {
  created_at: Generated<Date>;
  liked_user_id: number;
  updated_at: Generated<Date>;
  user_id: number;
}

export interface UserTag {
  created_at: Generated<Date>;
  tag_id: number;
  updated_at: Generated<Date>;
  user_id: number;
}

export interface UserViewed {
  updated_at: Generated<Date>;
  user_id: number;
  viewed_at: Generated<Date | null>;
  viewed_user_id: number;
}

export interface Verification {
  created_at: Generated<Date>;
  expiration_date: Date;
  id: Generated<number>;
  type: "email_verification" | "password_reset";
  unique_token: string;
  updated_at: Generated<Date>;
  user_id: number;
}

export interface DB {
  Conversation: Conversation;
  Conversation_participant: ConversationParticipant;
  Fake_account: FakeAccount;
  Location: Location;
  Message: Message;
  Notification: Notification;
  Picture: Picture;
  Profile: Profile;
  Tag: Tag;
  User: User;
  User_blocked: UserBlocked;
  User_dislike: UserDislike;
  User_like: UserLike;
  User_Tag: UserTag;
  User_viewed: UserViewed;
  Verification: Verification;
}
